/*! tailwindcss v4.0.8 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-yellow-50: oklch(98.7% 0.026 102.212);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-teal-50: oklch(98.4% 0.014 180.72);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-800: oklch(43.7% 0.078 188.216);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-800: oklch(43.8% 0.218 303.724);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentcolor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .lesson-note {
    margin-block: calc(var(--spacing) * 4);
    border-radius: var(--radius-sm);
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    border-color: #CE973E;
    background-color: var(--color-gray-50);
    padding: calc(var(--spacing) * 4);
    &:is(.dark *) {
      border-color: #A9792B;
    }
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 40%, transparent);
    }
    & > h4:has(.anchor-link:hover)::before {
      visibility: hidden;
    }
    & > *:first-child {
      margin-top: calc(var(--spacing) * 0);
    }
    & > *:last-child {
      margin-bottom: calc(var(--spacing) * 0);
    }
    & > *:first-child::before {
      mask-image: url("/assets/icons/pencil-square-solid-5a3f0e71.svg");
      content: '';
      margin-right: calc(var(--spacing) * 2);
      display: inline-block;
      height: calc(var(--spacing) * 5);
      width: calc(var(--spacing) * 5);
      background-color: #CE973E;
      vertical-align: text-bottom;
      &:is(.dark *) {
        background-color: #A9792B;
      }
    }
  }
  .\!visible {
    visibility: visible !important;
  }
  .anchor-link {
    .lesson-note > h4:has(&:hover)::before {
      visibility: hidden;
    }
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .anchor-link {
    position: relative;
    color: var(--color-gray-300);
    &:is(.dark *) {
      color: var(--color-gray-100);
    }
    &:hover {
      &:is(.dark *) {
        color: var(--color-gray-200);
      }
    }
    &:hover::before {
      mask-image: url("/assets/icons/link-5bd28b54.svg");
      content: ' ';
      position: absolute;
      top: calc(1/2 * 100%);
      left: calc(22px * -1);
      height: calc(var(--spacing) * 4);
      width: calc(var(--spacing) * 4);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      background-color: var(--color-gray-500);
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
      @media (width >= 40rem) {
        display: block;
      }
      &:is(.dark *) {
        background-color: var(--color-gray-300);
      }
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .\!absolute {
    position: absolute !important;
  }
  .\!relative {
    position: relative !important;
  }
  .absolute {
    position: absolute;
  }
  .absolute\! {
    position: absolute !important;
  }
  .fixed {
    position: fixed;
  }
  .fixed\! {
    position: fixed !important;
  }
  .relative {
    position: relative;
  }
  .relative\! {
    position: relative !important;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .start-1 {
    inset-inline-start: calc(var(--spacing) * 1);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3\.5 {
    top: calc(var(--spacing) * 3.5);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-7 {
    top: calc(var(--spacing) * 7);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-0\.5 {
    right: calc(var(--spacing) * 0.5);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-3\.5 {
    right: calc(var(--spacing) * 3.5);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-full {
    left: 100%;
  }
  .isolate {
    isolation: isolate;
  }
  .z-1 {
    z-index: 1;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .col-auto {
    grid-column: auto;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-4 {
    grid-column: span 4 / span 4;
  }
  .col-span-6 {
    grid-column: span 6 / span 6;
  }
  .col-span-12 {
    grid-column: span 12 / span 12;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-10 {
    grid-column-start: 10;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .float-right {
    float: right;
  }
  .\!container {
    width: 100% !important;
    @media (width >= 40rem) {
      max-width: 40rem !important;
    }
    @media (width >= 48rem) {
      max-width: 48rem !important;
    }
    @media (width >= 64rem) {
      max-width: 64rem !important;
    }
    @media (width >= 80rem) {
      max-width: 80rem !important;
    }
    @media (width >= 96rem) {
      max-width: 96rem !important;
    }
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .inline-img {
    margin: auto;
    display: inline;
  }
  .-m-1\.5 {
    margin: calc(var(--spacing) * -1.5);
  }
  .-m-2\.5 {
    margin: calc(var(--spacing) * -2.5);
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-31 {
    margin: calc(var(--spacing) * 31);
  }
  .page-container {
    margin-inline: auto;
    max-width: var(--container-7xl);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 10);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 14);
    }
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .page-heading-title {
    margin-inline: auto;
    padding-bottom: calc(var(--spacing) * 10);
    text-align: center;
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-800);
    &:is(.dark *) {
      color: var(--color-gray-200);
    }
  }
  .-mx-1\.5 {
    margin-inline: calc(var(--spacing) * -1.5);
  }
  .-mx-2 {
    margin-inline: calc(var(--spacing) * -2);
  }
  .-mx-4 {
    margin-inline: calc(var(--spacing) * -4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .-my-1\.5 {
    margin-block: calc(var(--spacing) * -1.5);
  }
  .-my-2 {
    margin-block: calc(var(--spacing) * -2);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-12 {
    margin-block: calc(var(--spacing) * 12);
  }
  .my-16 {
    margin-block: calc(var(--spacing) * 16);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
      width: fit-content;
      a {
        color: oklch(27.8% 0.033 256.848);
        text-decoration: none;
        font-weight: 600;
        &:hover {
          color: oklch(27.8% 0.033 256.848);
        }
      }
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
      a {
        text-decoration: none;
      }
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
      &:before {
        display: none;
      }
      &:after {
        display: none;
      }
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
    :where(details):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      summary {
        font-size: 1.25rem;
        margin-bottom: 1.25rem;
        font-weight: 600;
        cursor: pointer;
      }
    }
  }
  .lesson-content {
    & kbd {
      border-radius: var(--radius-md);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-gray-200);
      background-color: var(--color-gray-100);
      padding-inline: calc(var(--spacing) * 1.5);
      padding-block: calc(var(--spacing) * 1);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
      color: var(--color-gray-800);
      &:is(.dark *) {
        border-color: var(--color-gray-500);
      }
      &:is(.dark *) {
        background-color: var(--color-gray-600);
      }
      &:is(.dark *) {
        color: var(--color-gray-100);
      }
    }
    & pre code {
      background-color: transparent !important;
      padding: calc(var(--spacing) * 0);
      padding-top: 3px;
    }
    & a > code {
      color: var(--color-pink-700);
      &:is(.dark *) {
        color: color-mix(in oklab, var(--color-pink-400) 90%, transparent);
      }
    }
    & a > strong {
      color: currentColor;
    }
    & a > img:hover {
      cursor: zoom-in;
    }
    & > section:first-child > h3 {
      margin-top: calc(var(--spacing) * 0);
    }
    & a {
      &:hover {
        @media (hover: hover) {
          text-decoration-line: none;
        }
      }
    }
    & :is(h3, h4) > a {
      color: inherit !important;
    }
    & :is(h3, h4)[id] {
      scroll-margin-top: 40px;
    }
  }
  .lesson-content__panel {
    border-radius: var(--radius-lg);
    background-color: var(--color-gray-100);
    padding: calc(var(--spacing) * 6);
    &:is(.dark *) {
      background-color: var(--color-gray-800);
    }
    &:is(.dark *) {
      @layer utilities {
        box-shadow: inset 0 1px 0 0 hsl(0deg 0% 100% / 5%);
      }
    }
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        background-color: color-mix(in oklab, var(--color-slate-800) 60%, transparent);
      }
    }
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-ring-color: color-mix(in oklab, var(--color-slate-300) 10%, transparent);
      }
    }
    & > *:first-child {
      margin-top: calc(var(--spacing) * 0);
    }
    & code {
      background-color: var(--color-gray-200);
      &:is(.dark *) {
        background-color: color-mix(in oklab, var(--color-gray-700) 30%, transparent);
      }
    }
    & pre code {
      background-color: transparent;
      &:is(.dark *) {
        background-color: transparent;
      }
    }
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-0\! {
    margin-top: calc(var(--spacing) * 0) !important;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-auto {
    margin-top: auto;
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .-mr-2 {
    margin-right: calc(var(--spacing) * -2);
  }
  .-mr-12 {
    margin-right: calc(var(--spacing) * -12);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-8 {
    margin-right: calc(var(--spacing) * 8);
  }
  .mr-16 {
    margin-right: calc(var(--spacing) * 16);
  }
  .-mb-8 {
    margin-bottom: calc(var(--spacing) * -8);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-24 {
    margin-bottom: calc(var(--spacing) * 24);
  }
  .-ml-0\.5 {
    margin-left: calc(var(--spacing) * -0.5);
  }
  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }
  .-ml-px {
    margin-left: -1px;
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-auto {
    margin-left: auto;
  }
  .form-checkbox {
    appearance: none;
    padding: 0;
    print-color-adjust: exact;
    display: inline-block;
    vertical-align: middle;
    background-origin: border-box;
    user-select: none;
    flex-shrink: 0;
    height: 1rem;
    width: 1rem;
    color: oklch(54.6% 0.245 262.881);
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    --tw-shadow: 0 0 #0000;
    border-radius: 0px;
    &:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
      --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: oklch(54.6% 0.245 262.881);
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:checked {
      border-color: transparent;
      background-color: currentColor;
      background-size: 100% 100%;
      background-position: center;
      background-repeat: no-repeat;
    }
    &:checked {
      background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
      @media (forced-colors: active) {
        appearance: auto;
      }
    }
    &:checked:hover {
      border-color: transparent;
      background-color: currentColor;
    }
    &:checked:focus {
      border-color: transparent;
      background-color: currentColor;
    }
    &:indeterminate {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
      border-color: transparent;
      background-color: currentColor;
      background-size: 100% 100%;
      background-position: center;
      background-repeat: no-repeat;
      @media (forced-colors: active) {
        appearance: auto;
      }
    }
    &:indeterminate:hover {
      border-color: transparent;
      background-color: currentColor;
    }
    &:indeterminate:focus {
      border-color: transparent;
      background-color: currentColor;
    }
  }
  .lesson-note--critical {
    border-color: var(--color-red-600);
    &:is(.dark *) {
      border-color: var(--color-red-500);
    }
    & > *:first-child::before {
      mask-image: url("/assets/icons/exclamation-circle-solid-d154d598.svg");
      content: '';
      display: inline-block;
      height: calc(var(--spacing) * 5);
      width: calc(var(--spacing) * 5);
      background-color: var(--color-red-600);
      vertical-align: text-bottom;
      &:is(.dark *) {
        background-color: var(--color-red-500);
      }
    }
  }
  .lesson-note--tip {
    border-color: var(--color-blue-600);
    &:is(.dark *) {
      border-color: var(--color-blue-500);
    }
    & > *:first-child::before {
      mask-image: url("/assets/icons/light-bulb-solid-a4205a99.svg");
      content: '';
      display: inline-block;
      height: calc(var(--spacing) * 5);
      width: calc(var(--spacing) * 5);
      background-color: var(--color-blue-600);
      vertical-align: text-bottom;
      &:is(.dark *) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .lesson-note--warning {
    border-color: var(--color-orange-500);
    &:is(.dark *) {
      border-color: var(--color-orange-400);
    }
    & > *:first-child::before {
      mask-image: url("/assets/icons/exclamation-triangle-solid-8aa4a0c1.svg");
      content: '';
      display: inline-block;
      height: calc(var(--spacing) * 5);
      width: calc(var(--spacing) * 5);
      background-color: var(--color-orange-500);
      vertical-align: text-bottom;
      &:is(.dark *) {
        background-color: var(--color-orange-400);
      }
    }
  }
  .button {
    min-width: 100px;
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-white);
    text-decoration-line: none;
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      color: var(--color-white);
    }
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:is(.dark *) {
      &:focus {
        --tw-ring-offset-color: var(--color-black);
      }
    }
  }
  .button {
    min-width: 100px;
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-white);
    text-decoration-line: none;
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      color: var(--color-white);
    }
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:is(.dark *) {
      &:focus {
        --tw-ring-offset-color: var(--color-black);
      }
    }
  }
  .\!block {
    display: block !important;
  }
  .\!contents {
    display: contents !important;
  }
  .\!hidden {
    display: none !important;
  }
  .\!inline {
    display: inline !important;
  }
  .\!table {
    display: table !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline\! {
    display: inline !important;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .table\! {
    display: table !important;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .aspect-auto {
    aspect-ratio: auto;
  }
  .size-1 {
    width: calc(var(--spacing) * 1);
    height: calc(var(--spacing) * 1);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-36 {
    height: calc(var(--spacing) * 36);
  }
  .h-52 {
    height: calc(var(--spacing) * 52);
  }
  .h-60 {
    height: calc(var(--spacing) * 60);
  }
  .h-72 {
    height: calc(var(--spacing) * 72);
  }
  .h-\[54px\] {
    height: 54px;
  }
  .h-\[60vh\] {
    height: 60vh;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .\[width\:\\nexpression\(alert\(\'XSS\'\)\)\;\] {
    width: \nexpression(alert('XSS'));;
  }
  .\[width\:ex\/\*XSS\*\/\/\*\/\*\/pression\(alert\(\"XSS\"\)\)\] {
    width: ex/*XSS*//*/*/pression(alert("XSS"));
  }
  .\[width\:expr\/\*XSS\*\/ession\(alert\(\'XSS\'\)\)\] {
    width: expr/*XSS*/ession(alert('XSS'));
  }
  .\[width\:string\] {
    width: string;
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-40 {
    max-width: calc(var(--spacing) * 40);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-prose {
    max-width: 65ch;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-max {
    min-width: max-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-1 {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink\! {
    flex-shrink: 1 !important;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-2\/5 {
    flex-basis: calc(2/5 * 100%);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-center {
    transform-origin: center;
  }
  .origin-top-right {
    transform-origin: top right;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * 4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .-rotate-90 {
    rotate: calc(90deg * -1);
  }
  .-rotate-180 {
    rotate: calc(180deg * -1);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform\! {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y) !important;
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .animate-ping {
    animation: var(--animate-ping);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .scroll-mt-5 {
    scroll-margin-top: calc(var(--spacing) * 5);
  }
  .scroll-mt-24 {
    scroll-margin-top: calc(var(--spacing) * 24);
  }
  .form-select {
    appearance: none;
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    border-radius: 0px;
    padding-top: 0.5rem;
    padding-right: 0.75rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
    --tw-shadow: 0 0 #0000;
    &:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
      --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: oklch(54.6% 0.245 262.881);
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      border-color: oklch(54.6% 0.245 262.881);
    }
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
    print-color-adjust: exact;
    &:where([size]:not([size="1"])) {
      background-image: initial;
      background-position: initial;
      background-repeat: unset;
      background-size: initial;
      padding-right: 0.75rem;
      print-color-adjust: unset;
    }
  }
  .columns-1 {
    columns: 1;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-10 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-16 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 16) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-8 {
    column-gap: calc(var(--spacing) * 8);
  }
  .gap-x-10 {
    column-gap: calc(var(--spacing) * 10);
  }
  .space-x-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-5 {
    row-gap: calc(var(--spacing) * 5);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-7 {
    row-gap: calc(var(--spacing) * 7);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-16 {
    row-gap: calc(var(--spacing) * 16);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-y-2 {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(2px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(2px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-gray-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-100);
    }
  }
  .divide-gray-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-200);
    }
  }
  .divide-gray-300 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-300);
    }
  }
  .self-center {
    align-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .button--white {
    border-radius: var(--radius-md);
    background-color: var(--color-white);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-900);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-gray-300);
    --tw-ring-inset: inset;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
    &:is(.dark *) {
      color: var(--color-white);
    }
    &:is(.dark *) {
      --tw-ring-color: transparent;
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .button--white {
    border-radius: var(--radius-md);
    background-color: var(--color-white);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-900);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-gray-300);
    --tw-ring-inset: inset;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
    &:is(.dark *) {
      color: var(--color-white);
    }
    &:is(.dark *) {
      --tw-ring-color: transparent;
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border\! {
    border-style: var(--tw-border-style) !important;
    border-width: 1px !important;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-8 {
    border-top-style: var(--tw-border-style);
    border-top-width: 8px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .toc-item-active {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
    border-color: #A9792B !important;
    background-color: var(--color-gray-100);
    color: var(--color-gray-800);
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 40%, transparent);
    }
    &:is(.dark *) {
      color: var(--color-gray-300);
    }
  }
  .button--secondary {
    border-color: var(--color-gray-300);
    background-color: var(--color-white);
    color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
    &:focus {
      color: var(--color-gray-700);
    }
    &:focus {
      --tw-ring-color: var(--color-gray-400);
    }
    &:is(.dark *) {
      border-color: var(--color-gray-600);
    }
    &:is(.dark *) {
      background-color: transparent;
    }
    &:is(.dark *) {
      color: var(--color-gray-300);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-600);
      }
    }
  }
  .button--secondary {
    border-color: var(--color-gray-300);
    background-color: var(--color-white);
    color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
    &:focus {
      color: var(--color-gray-700);
    }
    &:focus {
      --tw-ring-color: var(--color-gray-400);
    }
    &:is(.dark *) {
      border-color: var(--color-gray-600);
    }
    &:is(.dark *) {
      background-color: transparent;
    }
    &:is(.dark *) {
      color: var(--color-gray-300);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-600);
      }
    }
  }
  .border-gold-500 {
    border-color: #CE973E;
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-900\/10 {
    border-color: color-mix(in oklab, var(--color-gray-900) 10%, transparent);
  }
  .border-red-300 {
    border-color: var(--color-red-300);
  }
  .border-red-600 {
    border-color: var(--color-red-600);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-t-gold-600 {
    border-top-color: #A9792B;
  }
  .button--gray {
    background-color: var(--color-gray-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
    &:focus {
      color: var(--color-gray-700);
    }
    &:focus {
      --tw-ring-color: var(--color-gray-400);
    }
    &:is(.dark *) {
      background-color: var(--color-gray-300);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-400);
        }
      }
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-900);
        }
      }
    }
  }
  .button--gray {
    background-color: var(--color-gray-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
    &:focus {
      color: var(--color-gray-700);
    }
    &:focus {
      --tw-ring-color: var(--color-gray-400);
    }
    &:is(.dark *) {
      background-color: var(--color-gray-300);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-400);
        }
      }
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-900);
        }
      }
    }
  }
  .button--dark {
    background-color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
    &:focus {
      --tw-ring-color: var(--color-gray-600);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
  .button--dark {
    background-color: var(--color-gray-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
    &:focus {
      --tw-ring-color: var(--color-gray-600);
    }
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
  .button--primary {
    background-color: var(--color-teal-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-800);
      }
    }
    &:focus {
      --tw-ring-color: var(--color-teal-700);
    }
  }
  .button--primary {
    background-color: var(--color-teal-700);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-800);
      }
    }
    &:focus {
      --tw-ring-color: var(--color-teal-700);
    }
  }
  .bg-blue-400 {
    background-color: var(--color-blue-400);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gold-500 {
    background-color: #CE973E;
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-300\/50 {
    background-color: color-mix(in oklab, var(--color-gray-300) 50%, transparent);
  }
  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }
  .bg-gray-500\/75 {
    background-color: color-mix(in oklab, var(--color-gray-500) 75%, transparent);
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-900\/80 {
    background-color: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
  }
  .bg-green-50 {
    background-color: var(--color-green-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-inherit {
    background-color: inherit;
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-teal-700 {
    background-color: var(--color-teal-700);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }
  .bg-linear-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .\[background-image\:url\(\"javascript\:alert\(\'XSS\'\)\"\)\;\] {
    background-image: url("javascript:alert('XSS')");;
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-gray-100 {
    --tw-gradient-to: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-current {
    fill: currentColor;
  }
  .stroke-gray-500 {
    stroke: var(--color-gray-500);
  }
  .stroke-orange-500 {
    stroke: var(--color-orange-500);
  }
  .stroke-teal-700 {
    stroke: var(--color-teal-700);
  }
  .stroke-2 {
    stroke-width: 2;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .button--medium {
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
  }
  .button--medium {
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }
  .pr-1 {
    padding-right: calc(var(--spacing) * 1);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pr-16 {
    padding-right: calc(var(--spacing) * 16);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-9 {
    padding-bottom: calc(var(--spacing) * 9);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-14 {
    padding-bottom: calc(var(--spacing) * 14);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-text-top {
    vertical-align: text-top;
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\! {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-7 {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
  }
  .leading-10 {
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-tighter {
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-amber-600 {
    color: var(--color-amber-600);
  }
  .text-blue-50 {
    color: var(--color-blue-50);
  }
  .text-blue-200 {
    color: var(--color-blue-200);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gold-600 {
    color: #A9792B;
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-green-900 {
    color: var(--color-green-900);
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-purple-200 {
    color: var(--color-purple-200);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-red-900 {
    color: var(--color-red-900);
  }
  .text-teal-50 {
    color: var(--color-teal-50);
  }
  .text-teal-600 {
    color: var(--color-teal-600);
  }
  .text-teal-700 {
    color: var(--color-teal-700);
  }
  .text-transparent {
    color: transparent;
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-200 {
    color: var(--color-yellow-200);
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .capitalize\! {
    text-transform: capitalize !important;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .no-underline {
    text-decoration-line: none;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-red-300 {
    &::placeholder {
      color: var(--color-red-300);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .\!shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none\! {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-black {
    --tw-ring-color: var(--color-black);
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-gray-600\/20 {
    --tw-ring-color: color-mix(in oklab, var(--color-gray-600) 20%, transparent);
  }
  .ring-gray-900\/5 {
    --tw-ring-color: color-mix(in oklab, var(--color-gray-900) 5%, transparent);
  }
  .ring-green-600\/20 {
    --tw-ring-color: color-mix(in oklab, var(--color-green-600) 20%, transparent);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .ring-yellow-600\/20 {
    --tw-ring-color: color-mix(in oklab, var(--color-yellow-600) 20%, transparent);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow {
    --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale\! {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .\!invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert\! {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .\!filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter\! {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-100 {
    transition-delay: 100ms;
  }
  .delay-200 {
    transition-delay: 200ms;
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .prose-gray {
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(52.5% 0.223 3.958);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: oklch(71.8% 0.202 349.761);
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .\!\[https\:\/\/bit\.ly\/2iJuFky\] {
    https: //bit.ly/2iJuFky !important;
  }
  .\!\[https\:\/\/bit\.ly\/2zwzhEK\] {
    https: //bit.ly/2zwzhEK !important;
  }
  .\!\[https\:\/\/bit\.ly\/2zxCJ1Z\] {
    https: //bit.ly/2zxCJ1Z !important;
  }
  .\[isorelax\:isorelax\] {
    isorelax: isorelax;
  }
  .\[link\:classes\/ActiveModel\/AttributeMethods\.html\] {
    link: classes/ActiveModel/AttributeMethods.html;
  }
  .\[link\:classes\/ActiveModel\/Callbacks\.html\] {
    link: classes/ActiveModel/Callbacks.html;
  }
  .\[link\:classes\/ActiveModel\/Dirty\.html\] {
    link: classes/ActiveModel/Dirty.html;
  }
  .\[link\:classes\/ActiveModel\/Errors\.html\] {
    link: classes/ActiveModel/Errors.html;
  }
  .\[link\:classes\/ActiveModel\/Naming\.html\] {
    link: classes/ActiveModel/Naming.html;
  }
  .\[link\:classes\/ActiveModel\/Serialization\.html\] {
    link: classes/ActiveModel/Serialization.html;
  }
  .\[link\:classes\/ActiveModel\/Translation\.html\] {
    link: classes/ActiveModel/Translation.html;
  }
  .\[link\:classes\/ActiveModel\/Validations\.html\] {
    link: classes/ActiveModel/Validations.html;
  }
  .\[link\:classes\/ActiveModel\/Validator\.html\] {
    link: classes/ActiveModel/Validator.html;
  }
  .\[link\:classes\/ActiveRecord\/Aggregations\/ClassMethods\.html\] {
    link: classes/ActiveRecord/Aggregations/ClassMethods.html;
  }
  .\[link\:classes\/ActiveRecord\/Associations\/ClassMethods\.html\] {
    link: classes/ActiveRecord/Associations/ClassMethods.html;
  }
  .\[link\:classes\/ActiveRecord\/Base\.html\] {
    link: classes/ActiveRecord/Base.html;
  }
  .\[link\:classes\/ActiveRecord\/Callbacks\.html\] {
    link: classes/ActiveRecord/Callbacks.html;
  }
  .\[link\:classes\/ActiveRecord\/Migration\.html\] {
    link: classes/ActiveRecord/Migration.html;
  }
  .\[link\:classes\/ActiveRecord\/Reflection\/ClassMethods\.html\] {
    link: classes/ActiveRecord/Reflection/ClassMethods.html;
  }
  .\[link\:classes\/ActiveRecord\/Transactions\/ClassMethods\.html\] {
    link: classes/ActiveRecord/Transactions/ClassMethods.html;
  }
  .\[link\:classes\/ActiveRecord\/Validations\.html\] {
    link: classes/ActiveRecord/Validations.html;
  }
  .\[link\:classes\/Rails\/Application\.html\#method-i-message_verifier\] {
    link: classes/Rails/Application.html#method-i-message verifier;
  }
  .\[link\:doc\/command_line_usage\.rdoc\] {
    link: doc/command line usage.rdoc;
  }
  .\[link\:doc\/glossary\.rdoc\] {
    link: doc/glossary.rdoc;
  }
  .\[link\:doc\/rakefile\.rdoc\] {
    link: doc/rakefile.rdoc;
  }
  .\[link\:doc\/rakefile_rdoc\.html\#label-Importing\+Dependencies\] {
    link: doc/rakefile rdoc.html#label-Importing+Dependencies;
  }
  .\[link\:doc\/rational\.rdoc\] {
    link: doc/rational.rdoc;
  }
  .\[link\:files\/activejob\/README_md\.html\] {
    link: files/activejob/README md.html;
  }
  .\[m\:n\] {
    m: n;
  }
  .\[mailto\:james\@grayproductions\.net\] {
    mailto: james@grayproductions.net;
  }
  .\[rdoc-label\:method-i-2A_changed-3F\] {
    rdoc-label: method-i-2A changed-3F;
  }
  .\[rdoc-label\:method-i-2A_previously_changed-3F\] {
    rdoc-label: method-i-2A previously changed-3F;
  }
  .\[rdoc-label\:method-i-2A_previously_was\] {
    rdoc-label: method-i-2A previously was;
  }
  .\[rdoc-label\:method-i-2A_was\] {
    rdoc-label: method-i-2A was;
  }
  .\[rdoc-label\:method-i-2A_will_change-21\] {
    rdoc-label: method-i-2A will change-21;
  }
  .\[rdoc-ref\:\#checkin\] {
    rdoc-ref: #checkin;
  }
  .\[rdoc-ref\:\#checkout\] {
    rdoc-ref: #checkout;
  }
  .\[rdoc-ref\:\#search\@Argument\+translation\] {
    rdoc-ref: #search@Argument+translation;
  }
  .\[rdoc-ref\:\#search\@Search\+criteria\] {
    rdoc-ref: #search@Search+criteria;
  }
  .\[rdoc-ref\:\#search\@Supported\+return\+options\] {
    rdoc-ref: #search@Supported+return+options;
  }
  .\[rdoc-ref\:\#with_connection\] {
    rdoc-ref: #with connection;
  }
  .\[rdoc-ref\:ARGF\] {
    rdoc-ref: ARGF;
  }
  .\[rdoc-ref\:AttributeAssignment\#attributes\=\] {
    rdoc-ref: AttributeAssignment#attributes=;
  }
  .\[rdoc-ref\:Base\#save\] {
    rdoc-ref: Base#save;
  }
  .\[rdoc-ref\:BigDecimal\@Not\+a\+Number\] {
    rdoc-ref: BigDecimal@Not+a+Number;
  }
  .\[rdoc-ref\:BodyTypeBasic\#content_id\] {
    rdoc-ref: BodyTypeBasic#content id;
  }
  .\[rdoc-ref\:BodyTypeBasic\#media_type\] {
    rdoc-ref: BodyTypeBasic#media type;
  }
  .\[rdoc-ref\:ClassMethods\#after_command\] {
    rdoc-ref: ClassMethods#after command;
  }
  .\[rdoc-ref\:ClassMethods\#after_subscribe\] {
    rdoc-ref: ClassMethods#after subscribe;
  }
  .\[rdoc-ref\:ClassMethods\#after_unsubscribe\] {
    rdoc-ref: ClassMethods#after unsubscribe;
  }
  .\[rdoc-ref\:ClassMethods\#around_command\] {
    rdoc-ref: ClassMethods#around command;
  }
  .\[rdoc-ref\:ClassMethods\#before_command\] {
    rdoc-ref: ClassMethods#before command;
  }
  .\[rdoc-ref\:ClassMethods\#before_subscribe\] {
    rdoc-ref: ClassMethods#before subscribe;
  }
  .\[rdoc-ref\:ClassMethods\#before_unsubscribe\] {
    rdoc-ref: ClassMethods#before unsubscribe;
  }
  .\[rdoc-ref\:ClassMethods\#on_subscribe\] {
    rdoc-ref: ClassMethods#on subscribe;
  }
  .\[rdoc-ref\:ClassMethods\#on_unsubscribe\] {
    rdoc-ref: ClassMethods#on unsubscribe;
  }
  .\[rdoc-ref\:ClassMethods\#store_accessor\] {
    rdoc-ref: ClassMethods#store accessor;
  }
  .\[rdoc-ref\:Config\#debug\=\] {
    rdoc-ref: Config#debug=;
  }
  .\[rdoc-ref\:Config\#debug\] {
    rdoc-ref: Config#debug;
  }
  .\[rdoc-ref\:Config\#idle_response_timeout\] {
    rdoc-ref: Config#idle response timeout;
  }
  .\[rdoc-ref\:Config\#max_response_size\] {
    rdoc-ref: Config#max response size;
  }
  .\[rdoc-ref\:Config\#open_timeout\] {
    rdoc-ref: Config#open timeout;
  }
  .\[rdoc-ref\:Config\#sasl_ir\] {
    rdoc-ref: Config#sasl ir;
  }
  .\[rdoc-ref\:ConnectionHandling\#connection\] {
    rdoc-ref: ConnectionHandling#connection;
  }
  .\[rdoc-ref\:ConnectionHandling\#establish_connection\] {
    rdoc-ref: ConnectionHandling#establish connection;
  }
  .\[rdoc-ref\:ConnectionHandling\#retrieve_connection\] {
    rdoc-ref: ConnectionHandling#retrieve connection;
  }
  .\[rdoc-ref\:ConnectionHandling\.connection\] {
    rdoc-ref: ConnectionHandling.connection;
  }
  .\[rdoc-ref\:Core\#new\] {
    rdoc-ref: Core#new;
  }
  .\[rdoc-ref\:Core\#readonly\?\] {
    rdoc-ref: Core#readonly?;
  }
  .\[rdoc-ref\:Core\.configurations\] {
    rdoc-ref: Core.configurations;
  }
  .\[rdoc-ref\:Core\.new\] {
    rdoc-ref: Core.new;
  }
  .\[rdoc-ref\:Date\@Argument\+limit\] {
    rdoc-ref: Date@Argument+limit;
  }
  .\[rdoc-ref\:Dir\.mkdir\] {
    rdoc-ref: Dir.mkdir;
  }
  .\[rdoc-ref\:Dir\.rmdir\] {
    rdoc-ref: Dir.rmdir;
  }
  .\[rdoc-ref\:ESearchResult\#to_a\] {
    rdoc-ref: ESearchResult#to a;
  }
  .\[rdoc-ref\:Encoding\.find\] {
    rdoc-ref: Encoding.find;
  }
  .\[rdoc-ref\:Encoding\] {
    rdoc-ref: Encoding;
  }
  .\[rdoc-ref\:Enumerable\@Enumerable\+in\+Ruby\+Classes\] {
    rdoc-ref: Enumerable@Enumerable+in+Ruby+Classes;
  }
  .\[rdoc-ref\:Enumerable\@What-27s\+Here\] {
    rdoc-ref: Enumerable@What-27s+Here;
  }
  .\[rdoc-ref\:Enumerable\] {
    rdoc-ref: Enumerable;
  }
  .\[rdoc-ref\:File\#chmod\] {
    rdoc-ref: File#chmod;
  }
  .\[rdoc-ref\:File\#chown\] {
    rdoc-ref: File#chown;
  }
  .\[rdoc-ref\:File\.chmod\] {
    rdoc-ref: File.chmod;
  }
  .\[rdoc-ref\:File\.chown\] {
    rdoc-ref: File.chown;
  }
  .\[rdoc-ref\:File\.lchmod\] {
    rdoc-ref: File.lchmod;
  }
  .\[rdoc-ref\:File\.lchown\] {
    rdoc-ref: File.lchown;
  }
  .\[rdoc-ref\:File\.open\] {
    rdoc-ref: File.open;
  }
  .\[rdoc-ref\:File\.utime\] {
    rdoc-ref: File.utime;
  }
  .\[rdoc-ref\:File\@Access\+Modes\] {
    rdoc-ref: File@Access+Modes;
  }
  .\[rdoc-ref\:File\@Data\+Mode\] {
    rdoc-ref: File@Data+Mode;
  }
  .\[rdoc-ref\:File\@File\+Permissions\] {
    rdoc-ref: File@File+Permissions;
  }
  .\[rdoc-ref\:FileUtils\@Avoiding\+the\+TOCTTOU\+Vulnerability\] {
    rdoc-ref: FileUtils@Avoiding+the+TOCTTOU+Vulnerability;
  }
  .\[rdoc-ref\:FileUtils\@Comparing\] {
    rdoc-ref: FileUtils@Comparing;
  }
  .\[rdoc-ref\:FileUtils\@Copying\] {
    rdoc-ref: FileUtils@Copying;
  }
  .\[rdoc-ref\:FileUtils\@Creating\] {
    rdoc-ref: FileUtils@Creating;
  }
  .\[rdoc-ref\:FileUtils\@Deleting\] {
    rdoc-ref: FileUtils@Deleting;
  }
  .\[rdoc-ref\:FileUtils\@Moving\] {
    rdoc-ref: FileUtils@Moving;
  }
  .\[rdoc-ref\:FileUtils\@Options\] {
    rdoc-ref: FileUtils@Options;
  }
  .\[rdoc-ref\:FileUtils\@Path\+Arguments\] {
    rdoc-ref: FileUtils@Path+Arguments;
  }
  .\[rdoc-ref\:FileUtils\@Querying\] {
    rdoc-ref: FileUtils@Querying;
  }
  .\[rdoc-ref\:FileUtils\@Setting\] {
    rdoc-ref: FileUtils@Setting;
  }
  .\[rdoc-ref\:File\] {
    rdoc-ref: File;
  }
  .\[rdoc-ref\:FinderMethods\#find\] {
    rdoc-ref: FinderMethods#find;
  }
  .\[rdoc-ref\:Generic\#cancel_response\] {
    rdoc-ref: Generic#cancel response;
  }
  .\[rdoc-ref\:Generic\#command_name\] {
    rdoc-ref: Generic#command name;
  }
  .\[rdoc-ref\:Generic\#decode\] {
    rdoc-ref: Generic#decode;
  }
  .\[rdoc-ref\:Generic\#encode\] {
    rdoc-ref: Generic#encode;
  }
  .\[rdoc-ref\:Generic\#encode_ir\] {
    rdoc-ref: Generic#encode ir;
  }
  .\[rdoc-ref\:Generic\#service\] {
    rdoc-ref: Generic#service;
  }
  .\[rdoc-ref\:Hash\@Hash\+Keys\] {
    rdoc-ref: Hash@Hash+Keys;
  }
  .\[rdoc-ref\:IO\.copy_stream\] {
    rdoc-ref: IO.copy stream;
  }
  .\[rdoc-ref\:IO\@Byte\+IO\] {
    rdoc-ref: IO@Byte+IO;
  }
  .\[rdoc-ref\:IO\@Character\+IO\] {
    rdoc-ref: IO@Character+IO;
  }
  .\[rdoc-ref\:IO\@Codepoint\+IO\] {
    rdoc-ref: IO@Codepoint+IO;
  }
  .\[rdoc-ref\:IO\@Line\+IO\] {
    rdoc-ref: IO@Line+IO;
  }
  .\[rdoc-ref\:IO\@Line\+Number\] {
    rdoc-ref: IO@Line+Number;
  }
  .\[rdoc-ref\:IO\@Open\+Options\] {
    rdoc-ref: IO@Open+Options;
  }
  .\[rdoc-ref\:IO\@Position\] {
    rdoc-ref: IO@Position;
  }
  .\[rdoc-ref\:IO\] {
    rdoc-ref: IO;
  }
  .\[rdoc-ref\:IRB\@Custom\+Prompts\] {
    rdoc-ref: IRB@Custom+Prompts;
  }
  .\[rdoc-ref\:Logger\@Entries\] {
    rdoc-ref: Logger@Entries;
  }
  .\[rdoc-ref\:Logger\@Log\+Level\] {
    rdoc-ref: Logger@Log+Level;
  }
  .\[rdoc-ref\:Logger\@Periodic\+Rotation\] {
    rdoc-ref: Logger@Periodic+Rotation;
  }
  .\[rdoc-ref\:Logger\@Program\+Name\] {
    rdoc-ref: Logger@Program+Name;
  }
  .\[rdoc-ref\:Logger\@Size-Based\+Rotation\] {
    rdoc-ref: Logger@Size-Based+Rotation;
  }
  .\[rdoc-ref\:Marshal\.dump\] {
    rdoc-ref: Marshal.dump;
  }
  .\[rdoc-ref\:Migration\] {
    rdoc-ref: Migration;
  }
  .\[rdoc-ref\:Object\@What-27s\+Here\] {
    rdoc-ref: Object@What-27s+Here;
  }
  .\[rdoc-ref\:Object\] {
    rdoc-ref: Object;
  }
  .\[rdoc-ref\:OpenURI\] {
    rdoc-ref: OpenURI;
  }
  .\[rdoc-ref\:PStore\@Entries\] {
    rdoc-ref: PStore@Entries;
  }
  .\[rdoc-ref\:PStore\@Hierarchical\+Values\] {
    rdoc-ref: PStore@Hierarchical+Values;
  }
  .\[rdoc-ref\:PStore\@The\+Store\] {
    rdoc-ref: PStore@The+Store;
  }
  .\[rdoc-ref\:PStore\@The\+Transaction\+Block\] {
    rdoc-ref: PStore@The+Transaction+Block;
  }
  .\[rdoc-ref\:PStore\@Transactions\] {
    rdoc-ref: PStore@Transactions;
  }
  .\[rdoc-ref\:Persistence\#destroy\!\] {
    rdoc-ref: Persistence#destroy!;
  }
  .\[rdoc-ref\:Persistence\#destroy\] {
    rdoc-ref: Persistence#destroy;
  }
  .\[rdoc-ref\:Persistence\#new_record\?\] {
    rdoc-ref: Persistence#new record?;
  }
  .\[rdoc-ref\:Persistence\#save\!\] {
    rdoc-ref: Persistence#save!;
  }
  .\[rdoc-ref\:Persistence\#save\] {
    rdoc-ref: Persistence#save;
  }
  .\[rdoc-ref\:Process\.spawn\] {
    rdoc-ref: Process.spawn;
  }
  .\[rdoc-ref\:Process\@Argument\+command_line\+or\+exe_path\] {
    rdoc-ref: Process@Argument+command line+or+exe path;
  }
  .\[rdoc-ref\:Process\@Execution\+Environment\] {
    rdoc-ref: Process@Execution+Environment;
  }
  .\[rdoc-ref\:Process\@Execution\+Options\] {
    rdoc-ref: Process@Execution+Options;
  }
  .\[rdoc-ref\:QueryMethods\#group\] {
    rdoc-ref: QueryMethods#group;
  }
  .\[rdoc-ref\:QueryMethods\#preload\] {
    rdoc-ref: QueryMethods#preload;
  }
  .\[rdoc-ref\:QueryMethods\#select\] {
    rdoc-ref: QueryMethods#select;
  }
  .\[rdoc-ref\:QueryMethods\#where\] {
    rdoc-ref: QueryMethods#where;
  }
  .\[rdoc-ref\:Relation\#update_all\] {
    rdoc-ref: Relation#update all;
  }
  .\[rdoc-ref\:ResponseCode\] {
    rdoc-ref: ResponseCode;
  }
  .\[rdoc-ref\:Runnable\#result_code\] {
    rdoc-ref: Runnable#result code;
  }
  .\[rdoc-ref\:SchemaStatements\#add_check_constraint\] {
    rdoc-ref: SchemaStatements#add check constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#add_exclusion_constraint\] {
    rdoc-ref: SchemaStatements#add exclusion constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#add_foreign_key\] {
    rdoc-ref: SchemaStatements#add foreign key;
  }
  .\[rdoc-ref\:SchemaStatements\#add_index\] {
    rdoc-ref: SchemaStatements#add index;
  }
  .\[rdoc-ref\:SchemaStatements\#add_reference\] {
    rdoc-ref: SchemaStatements#add reference;
  }
  .\[rdoc-ref\:SchemaStatements\#add_timestamps\] {
    rdoc-ref: SchemaStatements#add timestamps;
  }
  .\[rdoc-ref\:SchemaStatements\#add_unique_constraint\] {
    rdoc-ref: SchemaStatements#add unique constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#change_column_default\] {
    rdoc-ref: SchemaStatements#change column default;
  }
  .\[rdoc-ref\:SchemaStatements\#change_column_null\] {
    rdoc-ref: SchemaStatements#change column null;
  }
  .\[rdoc-ref\:SchemaStatements\#check_constraint_exists\?\] {
    rdoc-ref: SchemaStatements#check constraint exists?;
  }
  .\[rdoc-ref\:SchemaStatements\#column_exists\?\] {
    rdoc-ref: SchemaStatements#column exists?;
  }
  .\[rdoc-ref\:SchemaStatements\#create_table\] {
    rdoc-ref: SchemaStatements#create table;
  }
  .\[rdoc-ref\:SchemaStatements\#foreign_key_exists\?\] {
    rdoc-ref: SchemaStatements#foreign key exists?;
  }
  .\[rdoc-ref\:SchemaStatements\#index_exists\?\] {
    rdoc-ref: SchemaStatements#index exists?;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_check_constraint\] {
    rdoc-ref: SchemaStatements#remove check constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_columns\] {
    rdoc-ref: SchemaStatements#remove columns;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_exclusion_constraint\] {
    rdoc-ref: SchemaStatements#remove exclusion constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_foreign_key\] {
    rdoc-ref: SchemaStatements#remove foreign key;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_index\] {
    rdoc-ref: SchemaStatements#remove index;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_reference\] {
    rdoc-ref: SchemaStatements#remove reference;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_timestamps\] {
    rdoc-ref: SchemaStatements#remove timestamps;
  }
  .\[rdoc-ref\:SchemaStatements\#remove_unique_constraint\] {
    rdoc-ref: SchemaStatements#remove unique constraint;
  }
  .\[rdoc-ref\:SchemaStatements\#rename_column\] {
    rdoc-ref: SchemaStatements#rename column;
  }
  .\[rdoc-ref\:SchemaStatements\#rename_index\] {
    rdoc-ref: SchemaStatements#rename index;
  }
  .\[rdoc-ref\:SequenceSet\@Creating\+sequence\+sets\] {
    rdoc-ref: SequenceSet@Creating+sequence+sets;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Assigning\] {
    rdoc-ref: SequenceSet@Methods+for+Assigning;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Comparing\] {
    rdoc-ref: SequenceSet@Methods+for+Comparing;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Creating\+a\+SequenceSet\] {
    rdoc-ref: SequenceSet@Methods+for+Creating+a+SequenceSet;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Deleting\] {
    rdoc-ref: SequenceSet@Methods+for+Deleting;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+IMAP\+String\+Formatting\] {
    rdoc-ref: SequenceSet@Methods+for+IMAP+String+Formatting;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Iterating\] {
    rdoc-ref: SequenceSet@Methods+for+Iterating;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Querying\] {
    rdoc-ref: SequenceSet@Methods+for+Querying;
  }
  .\[rdoc-ref\:SequenceSet\@Methods\+for\+Set\+Operations\] {
    rdoc-ref: SequenceSet@Methods+for+Set+Operations;
  }
  .\[rdoc-ref\:Socket\.tcp_fast_fallback\=\] {
    rdoc-ref: Socket.tcp fast fallback=;
  }
  .\[rdoc-ref\:SomeClass\] {
    rdoc-ref: SomeClass;
  }
  .\[rdoc-ref\:String\#dump\] {
    rdoc-ref: String#dump;
  }
  .\[rdoc-ref\:String\#scrub\] {
    rdoc-ref: String#scrub;
  }
  .\[rdoc-ref\:Time\#strftime\] {
    rdoc-ref: Time#strftime;
  }
  .\[rdoc-ref\:URI\.encode_www_form\] {
    rdoc-ref: URI.encode www form;
  }
  .\[rdoc-ref\:calendars\.rdoc\@Argument\+start\] {
    rdoc-ref: calendars.rdoc@Argument+start;
  }
  .\[rdoc-ref\:calendars\.rdoc\] {
    rdoc-ref: calendars.rdoc;
  }
  .\[rdoc-ref\:case_mapping\.rdoc\] {
    rdoc-ref: case mapping.rdoc;
  }
  .\[rdoc-ref\:command_injection\.rdoc\@Command\+Injection\] {
    rdoc-ref: command injection.rdoc@Command+Injection;
  }
  .\[rdoc-ref\:dig_methods\.rdoc\] {
    rdoc-ref: dig methods.rdoc;
  }
  .\[rdoc-ref\:doc\/dig_methods\.rdoc\] {
    rdoc-ref: doc/dig methods.rdoc;
  }
  .\[rdoc-ref\:implicit_conversion\.rdoc\@Array-Convertible\+Objects\] {
    rdoc-ref: implicit conversion.rdoc@Array-Convertible+Objects;
  }
  .\[rdoc-ref\:lib\/racc\/rdoc\/grammar\.en\.rdoc\] {
    rdoc-ref: lib/racc/rdoc/grammar.en.rdoc;
  }
  .\[rdoc\:coverage\] {
    rdoc: coverage;
  }
  .\[ruby-core\:4261\] {
    ruby-core: 4261;
  }
  .\[ruby-core\:63582\] {
    ruby-core: 63582;
  }
  .\[ruby-core\:85266\] {
    ruby-core: 85266;
  }
  .\[ruby-core\:105587\] {
    ruby-core: 105587;
  }
  .\[ruby-dev\:27513\] {
    ruby-dev: 27513;
  }
  .\[ruby-dev\:29520\] {
    ruby-dev: 29520;
  }
  .\[ruby-dev\:50626\] {
    ruby-dev: 50626;
  }
  .\[ruby-list\:50731\] {
    ruby-list: 50731;
  }
  .\[test-unit-users-en\:00026\] {
    test-unit-users-en: 00026;
  }
  .\[test-unit-users-en\:00035\] {
    test-unit-users-en: 00035;
  }
  .\[test-unit-users-en\:00089\] {
    test-unit-users-en: 00089;
  }
  .\[test-unit-users-en\:00098\] {
    test-unit-users-en: 00098;
  }
  .\[xerces\:xercesImpl\] {
    xerces: xercesImpl;
  }
  .\[xml-apis\:xml-apis\] {
    xml-apis: xml-apis;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .group-last\:hidden {
    &:is(:where(.group):last-child *) {
      display: none;
    }
  }
  .group-hover\:text-gray-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .group-hover\:text-gray-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
  }
  .group-hover\:text-gray-800 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .group-hover\:text-red-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-red-600);
      }
    }
  }
  .group-hover\:opacity-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 0%;
      }
    }
  }
  .group-aria-busy\:opacity-0 {
    &:is(:where(.group)[aria-busy="true"] *) {
      opacity: 0%;
    }
  }
  .group-aria-busy\:opacity-100 {
    &:is(:where(.group)[aria-busy="true"] *) {
      opacity: 100%;
    }
  }
  .group-\[\.single-item\]\:px-4 {
    &:is(:where(.group):is(.single-item) *) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .placeholder\:text-gray-400 {
    &::placeholder {
      color: var(--color-gray-400);
    }
  }
  .only\:block {
    &:only-child {
      display: block;
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:border-gray-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-gray-300);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
  }
  .hover\:bg-green-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-200);
      }
    }
  }
  .hover\:bg-red-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-200);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
  }
  .hover\:fill-\[\#4267B2\] {
    &:hover {
      @media (hover: hover) {
        fill: #4267B2;
      }
    }
  }
  .hover\:fill-\[\#7289d9\] {
    &:hover {
      @media (hover: hover) {
        fill: #7289d9;
      }
    }
  }
  .hover\:fill-black {
    &:hover {
      @media (hover: hover) {
        fill: var(--color-black);
      }
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .hover\:text-gray-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-400);
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-gray-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:transition-colors {
    &:hover {
      @media (hover: hover) {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
      }
    }
  }
  .focus\:z-10 {
    &:focus {
      z-index: 10;
    }
  }
  .focus\:border-1 {
    &:focus {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .focus\:border-blue-500 {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }
  .focus\:border-blue-600 {
    &:focus {
      border-color: var(--color-blue-600);
    }
  }
  .focus\:border-gray-100 {
    &:focus {
      border-color: var(--color-gray-100);
    }
  }
  .focus\:border-gray-500 {
    &:focus {
      border-color: var(--color-gray-500);
    }
  }
  .focus\:border-red-500 {
    &:focus {
      border-color: var(--color-red-500);
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:ring-blue-600 {
    &:focus {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .focus\:ring-gold-500 {
    &:focus {
      --tw-ring-color: #CE973E;
    }
  }
  .focus\:ring-gold-600 {
    &:focus {
      --tw-ring-color: #A9792B;
    }
  }
  .focus\:ring-gray-400 {
    &:focus {
      --tw-ring-color: var(--color-gray-400);
    }
  }
  .focus\:ring-gray-600 {
    &:focus {
      --tw-ring-color: var(--color-gray-600);
    }
  }
  .focus\:ring-green-600 {
    &:focus {
      --tw-ring-color: var(--color-green-600);
    }
  }
  .focus\:ring-red-500 {
    &:focus {
      --tw-ring-color: var(--color-red-500);
    }
  }
  .focus\:ring-red-600 {
    &:focus {
      --tw-ring-color: var(--color-red-600);
    }
  }
  .focus\:ring-teal-800 {
    &:focus {
      --tw-ring-color: var(--color-teal-800);
    }
  }
  .focus\:ring-white {
    &:focus {
      --tw-ring-color: var(--color-white);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:ring-offset-green-100 {
    &:focus {
      --tw-ring-offset-color: var(--color-green-100);
    }
  }
  .focus\:ring-offset-red-100 {
    &:focus {
      --tw-ring-offset-color: var(--color-red-100);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:ring-inset {
    &:focus {
      --tw-ring-inset: inset;
    }
  }
  .focus-visible\:outline-offset-0 {
    &:focus-visible {
      outline-offset: 0px;
    }
  }
  .disabled\:cursor-default {
    &:disabled {
      cursor: default;
    }
  }
  .disabled\:button--gray {
    &:disabled {
      background-color: var(--color-gray-200);
      padding-inline: calc(var(--spacing) * 4);
      padding-block: calc(var(--spacing) * 2);
      color: var(--color-gray-700);
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-300);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-700);
        }
      }
      &:focus {
        color: var(--color-gray-700);
      }
      &:focus {
        --tw-ring-color: var(--color-gray-400);
      }
      &:is(.dark *) {
        background-color: var(--color-gray-300);
      }
      &:is(.dark *) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-gray-400);
          }
        }
      }
      &:is(.dark *) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-gray-900);
          }
        }
      }
    }
  }
  .disabled\:button--gray {
    &:disabled {
      background-color: var(--color-gray-200);
      padding-inline: calc(var(--spacing) * 4);
      padding-block: calc(var(--spacing) * 2);
      color: var(--color-gray-700);
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-300);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-700);
        }
      }
      &:focus {
        color: var(--color-gray-700);
      }
      &:focus {
        --tw-ring-color: var(--color-gray-400);
      }
      &:is(.dark *) {
        background-color: var(--color-gray-300);
      }
      &:is(.dark *) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-gray-400);
          }
        }
      }
      &:is(.dark *) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-gray-900);
          }
        }
      }
    }
  }
  .disabled\:p-1\.5 {
    &:disabled {
      padding: calc(var(--spacing) * 1.5);
    }
  }
  .disabled\:hover\:bg-gray-200 {
    &:disabled {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-200);
        }
      }
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .sm\:col-span-4 {
    @media (width >= 40rem) {
      grid-column: span 4 / span 4;
    }
  }
  .sm\:col-span-6 {
    @media (width >= 40rem) {
      grid-column: span 6 / span 6;
    }
  }
  .sm\:col-span-10 {
    @media (width >= 40rem) {
      grid-column: span 10 / span 10;
    }
  }
  .sm\:-mx-6 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * -6);
    }
  }
  .sm\:mx-auto {
    @media (width >= 40rem) {
      margin-inline: auto;
    }
  }
  .sm\:my-8 {
    @media (width >= 40rem) {
      margin-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:mt-0 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:mt-1\.5 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 1.5);
    }
  }
  .sm\:mt-16 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 16);
    }
  }
  .sm\:mt-20 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:ml-2 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 2);
    }
  }
  .sm\:ml-3 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 3);
    }
  }
  .sm\:ml-6 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:grid {
    @media (width >= 40rem) {
      display: grid;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:inline-block {
    @media (width >= 40rem) {
      display: inline-block;
    }
  }
  .sm\:inline-flex {
    @media (width >= 40rem) {
      display: inline-flex;
    }
  }
  .sm\:h-7 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 7);
    }
  }
  .sm\:h-8 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 8);
    }
  }
  .sm\:h-24 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .sm\:h-28 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 28);
    }
  }
  .sm\:h-32 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 32);
    }
  }
  .sm\:h-40 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 40);
    }
  }
  .sm\:h-full {
    @media (width >= 40rem) {
      height: 100%;
    }
  }
  .sm\:w-20 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .sm\:w-24 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .sm\:w-28 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 28);
    }
  }
  .sm\:w-40 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 40);
    }
  }
  .sm\:w-56 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 56);
    }
  }
  .sm\:w-\[500px\] {
    @media (width >= 40rem) {
      width: 500px;
    }
  }
  .sm\:w-auto {
    @media (width >= 40rem) {
      width: auto;
    }
  }
  .sm\:w-full {
    @media (width >= 40rem) {
      width: 100%;
    }
  }
  .sm\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\:max-w-md {
    @media (width >= 40rem) {
      max-width: var(--container-md);
    }
  }
  .sm\:flex-auto {
    @media (width >= 40rem) {
      flex: auto;
    }
  }
  .sm\:translate-y-0 {
    @media (width >= 40rem) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:scale-95 {
    @media (width >= 40rem) {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:scale-100 {
    @media (width >= 40rem) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-4 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-12 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-row-reverse {
    @media (width >= 40rem) {
      flex-direction: row-reverse;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:items-start {
    @media (width >= 40rem) {
      align-items: flex-start;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:justify-start {
    @media (width >= 40rem) {
      justify-content: flex-start;
    }
  }
  .sm\:gap-3 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:space-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\:gap-x-6 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:space-x-4 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:space-x-6 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:space-x-8 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:rounded-md {
    @media (width >= 40rem) {
      border-radius: var(--radius-md);
    }
  }
  .sm\:p-0 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .sm\:p-2 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .sm\:p-3 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .sm\:p-6 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-0 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-16 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 16);
    }
  }
  .sm\:py-16 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .sm\:pt-0 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:pt-1 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 1);
    }
  }
  .sm\:pt-12 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 12);
    }
  }
  .sm\:pt-16 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .sm\:pr-0 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .sm\:pr-2 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 2);
    }
  }
  .sm\:pr-\[15px\] {
    @media (width >= 40rem) {
      padding-right: 15px;
    }
  }
  .sm\:pl-0 {
    @media (width >= 40rem) {
      padding-left: calc(var(--spacing) * 0);
    }
  }
  .sm\:text-center {
    @media (width >= 40rem) {
      text-align: center;
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:text-6xl {
    @media (width >= 40rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-lg {
    @media (width >= 40rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\:text-sm\/6 {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .sm\:leading-6 {
    @media (width >= 40rem) {
      --tw-leading: calc(var(--spacing) * 6);
      line-height: calc(var(--spacing) * 6);
    }
  }
  .md\:relative {
    @media (width >= 48rem) {
      position: relative;
    }
  }
  .md\:static {
    @media (width >= 48rem) {
      position: static;
    }
  }
  .md\:top-auto {
    @media (width >= 48rem) {
      top: auto;
    }
  }
  .md\:right-auto {
    @media (width >= 48rem) {
      right: auto;
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-span-8 {
    @media (width >= 48rem) {
      grid-column: span 8 / span 8;
    }
  }
  .md\:col-start-3 {
    @media (width >= 48rem) {
      grid-column-start: 3;
    }
  }
  .md\:mt-0 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .md\:mb-0 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:ml-6 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-40 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 40);
    }
  }
  .md\:w-60 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 60);
    }
  }
  .md\:max-w-full {
    @media (width >= 48rem) {
      max-width: 100%;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-6 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:items-start {
    @media (width >= 48rem) {
      align-items: flex-start;
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:space-y-0 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:space-x-4 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .md\:space-x-7 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 7) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 7) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .md\:border-b {
    @media (width >= 48rem) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .md\:px-0 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:px-2 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .md\:py-2 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .md\:pt-0 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .md\:pb-0 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:pb-6 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }
  .md\:pl-4 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 4);
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .lg\:fixed {
    @media (width >= 64rem) {
      position: fixed;
    }
  }
  .lg\:inset-y-0 {
    @media (width >= 64rem) {
      inset-block: calc(var(--spacing) * 0);
    }
  }
  .lg\:z-30 {
    @media (width >= 64rem) {
      z-index: 30;
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:col-span-3 {
    @media (width >= 64rem) {
      grid-column: span 3 / span 3;
    }
  }
  .lg\:col-span-9 {
    @media (width >= 64rem) {
      grid-column: span 9 / span 9;
    }
  }
  .lg\:col-span-10 {
    @media (width >= 64rem) {
      grid-column: span 10 / span 10;
    }
  }
  .lg\:col-start-2 {
    @media (width >= 64rem) {
      grid-column-start: 2;
    }
  }
  .lg\:mx-0 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:mx-auto {
    @media (width >= 64rem) {
      margin-inline: auto;
    }
  }
  .lg\:mt-24 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 24);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:grid {
    @media (width >= 64rem) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-5\/6 {
    @media (width >= 64rem) {
      width: calc(5/6 * 100%);
    }
  }
  .lg\:w-72 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 72);
    }
  }
  .lg\:max-w-none {
    @media (width >= 64rem) {
      max-width: none;
    }
  }
  .lg\:max-w-xl {
    @media (width >= 64rem) {
      max-width: var(--container-xl);
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-6 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-12 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:gap-x-5 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:px-0 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:px-4 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:px-12 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .lg\:py-0 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .lg\:pl-72 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 72);
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:shadow-none {
    @media (width >= 64rem) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .xl\:col-span-2 {
    @media (width >= 80rem) {
      grid-column: span 2 / span 2;
    }
  }
  .xl\:col-span-7 {
    @media (width >= 80rem) {
      grid-column: span 7 / span 7;
    }
  }
  .xl\:col-start-2 {
    @media (width >= 80rem) {
      grid-column-start: 2;
    }
  }
  .xl\:mx-0 {
    @media (width >= 80rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .xl\:mt-0 {
    @media (width >= 80rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:grid {
    @media (width >= 80rem) {
      display: grid;
    }
  }
  .xl\:w-1\/2 {
    @media (width >= 80rem) {
      width: calc(1/2 * 100%);
    }
  }
  .xl\:max-w-full {
    @media (width >= 80rem) {
      max-width: 100%;
    }
  }
  .xl\:max-w-none {
    @media (width >= 80rem) {
      max-width: none;
    }
  }
  .xl\:max-w-prose {
    @media (width >= 80rem) {
      max-width: 65ch;
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-5 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-8 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(8, minmax(0, 1fr));
    }
  }
  .xl\:flex-row {
    @media (width >= 80rem) {
      flex-direction: row;
    }
  }
  .xl\:flex-wrap {
    @media (width >= 80rem) {
      flex-wrap: wrap;
    }
  }
  .xl\:items-start {
    @media (width >= 80rem) {
      align-items: flex-start;
    }
  }
  .xl\:justify-start {
    @media (width >= 80rem) {
      justify-content: flex-start;
    }
  }
  .xl\:gap-8 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .xl\:space-y-0 {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .xl\:space-x-4 {
    @media (width >= 80rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .xl\:text-left {
    @media (width >= 80rem) {
      text-align: left;
    }
  }
  .dark\:divide-gray-600 {
    &:is(.dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-gray-600);
      }
    }
  }
  .dark\:divide-gray-700 {
    &:is(.dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-gray-700);
      }
    }
  }
  .dark\:divide-gray-800 {
    &:is(.dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-gray-800);
      }
    }
  }
  .dark\:border {
    &:is(.dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-gray-500 {
    &:is(.dark *) {
      border-color: var(--color-gray-500);
    }
  }
  .dark\:border-gray-600 {
    &:is(.dark *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:border-gray-700 {
    &:is(.dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:border-gray-800 {
    &:is(.dark *) {
      border-color: var(--color-gray-800);
    }
  }
  .dark\:border-white\/5 {
    &:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .dark\:border-white\/10 {
    &:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .dark\:border-t-gold-700 {
    &:is(.dark *) {
      border-top-color: #7C5920;
    }
  }
  .dark\:bg-black {
    &:is(.dark *) {
      background-color: var(--color-black);
    }
  }
  .dark\:bg-black\/70 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }
  .dark\:bg-gray-400\/10 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-400) 10%, transparent);
    }
  }
  .dark\:bg-gray-700 {
    &:is(.dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-gray-700\/10 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 10%, transparent);
    }
  }
  .dark\:bg-gray-700\/40 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 40%, transparent);
    }
  }
  .dark\:bg-gray-700\/50 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }
  .dark\:bg-gray-700\/60 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
    }
  }
  .dark\:bg-gray-700\/90 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-700) 90%, transparent);
    }
  }
  .dark\:bg-gray-800 {
    &:is(.dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:bg-gray-800\/30 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-800) 30%, transparent);
    }
  }
  .dark\:bg-gray-900 {
    &:is(.dark *) {
      background-color: var(--color-gray-900);
    }
  }
  .dark\:bg-green-500\/10 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
    }
  }
  .dark\:bg-transparent {
    &:is(.dark *) {
      background-color: transparent;
    }
  }
  .dark\:bg-white {
    &:is(.dark *) {
      background-color: var(--color-white);
    }
  }
  .dark\:bg-yellow-400\/10 {
    &:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-yellow-400) 10%, transparent);
    }
  }
  .dark\:bg-none {
    &:is(.dark *) {
      background-image: none;
    }
  }
  .dark\:text-blue-400 {
    &:is(.dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-gold-600 {
    &:is(.dark *) {
      color: #A9792B;
    }
  }
  .dark\:text-gray-100 {
    &:is(.dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-200 {
    &:is(.dark *) {
      color: var(--color-gray-200);
    }
  }
  .dark\:text-gray-300 {
    &:is(.dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-gray-300\/70 {
    &:is(.dark *) {
      color: color-mix(in oklab, var(--color-gray-300) 70%, transparent);
    }
  }
  .dark\:text-gray-300\/80 {
    &:is(.dark *) {
      color: color-mix(in oklab, var(--color-gray-300) 80%, transparent);
    }
  }
  .dark\:text-gray-400 {
    &:is(.dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-gray-500 {
    &:is(.dark *) {
      color: var(--color-gray-500);
    }
  }
  .dark\:text-gray-600 {
    &:is(.dark *) {
      color: var(--color-gray-600);
    }
  }
  .dark\:text-gray-900 {
    &:is(.dark *) {
      color: var(--color-gray-900);
    }
  }
  .dark\:text-green-400 {
    &:is(.dark *) {
      color: var(--color-green-400);
    }
  }
  .dark\:text-green-600 {
    &:is(.dark *) {
      color: var(--color-green-600);
    }
  }
  .dark\:text-orange-400 {
    &:is(.dark *) {
      color: var(--color-orange-400);
    }
  }
  .dark\:text-red-300 {
    &:is(.dark *) {
      color: var(--color-red-300);
    }
  }
  .dark\:text-red-500 {
    &:is(.dark *) {
      color: var(--color-red-500);
    }
  }
  .dark\:text-teal-600 {
    &:is(.dark *) {
      color: var(--color-teal-600);
    }
  }
  .dark\:text-white {
    &:is(.dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-yellow-500 {
    &:is(.dark *) {
      color: var(--color-yellow-500);
    }
  }
  .dark\:antialiased {
    &:is(.dark *) {
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
  }
  .dark\:placeholder-gray-400 {
    &:is(.dark *) {
      &::placeholder {
        color: var(--color-gray-400);
      }
    }
  }
  .dark\:shadow-none {
    &:is(.dark *) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-1 {
    &:is(.dark *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-gray-300\/5 {
    &:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-gray-300) 5%, transparent);
    }
  }
  .dark\:ring-gray-400\/20 {
    &:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-gray-400) 20%, transparent);
    }
  }
  .dark\:ring-gray-600 {
    &:is(.dark *) {
      --tw-ring-color: var(--color-gray-600);
    }
  }
  .dark\:ring-gray-700 {
    &:is(.dark *) {
      --tw-ring-color: var(--color-gray-700);
    }
  }
  .dark\:ring-green-500\/20 {
    &:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }
  .dark\:ring-white\/10 {
    &:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .dark\:ring-yellow-400\/20 {
    &:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-yellow-400) 20%, transparent);
    }
  }
  .dark\:prose-invert {
    &:is(.dark *) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:ring-inset {
    &:is(.dark *) {
      --tw-ring-inset: inset;
    }
  }
  .dark\:group-hover\:text-gray-200 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-gray-200);
        }
      }
    }
  }
  .dark\:group-hover\:text-gray-300 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-gray-300);
        }
      }
    }
  }
  .dark\:group-hover\:text-gray-400 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-gray-400);
        }
      }
    }
  }
  .dark\:group-hover\:text-red-400 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-red-400);
        }
      }
    }
  }
  .dark\:checked\:border-gold-600 {
    &:is(.dark *) {
      &:checked {
        border-color: #A9792B;
      }
    }
  }
  .dark\:checked\:bg-gold-600 {
    &:is(.dark *) {
      &:checked {
        background-color: #A9792B;
      }
    }
  }
  .dark\:hover\:border-gray-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-gray-600);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-600);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-600\/70 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-gray-600) 70%, transparent);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700\/50 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700\/60 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-gray-700) 60%, transparent);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-800);
        }
      }
    }
  }
  .dark\:hover\:fill-white {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          fill: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:text-blue-300 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-300);
        }
      }
    }
  }
  .dark\:hover\:text-gray-100 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-100);
        }
      }
    }
  }
  .dark\:hover\:text-gray-200 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-200);
        }
      }
    }
  }
  .dark\:hover\:text-gray-300 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-300);
        }
      }
    }
  }
  .dark\:hover\:text-gray-400 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-400);
        }
      }
    }
  }
  .dark\:hover\:text-white {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:focus\:border-gray-300 {
    &:is(.dark *) {
      &:focus {
        border-color: var(--color-gray-300);
      }
    }
  }
  .dark\:focus\:border-gray-700 {
    &:is(.dark *) {
      &:focus {
        border-color: var(--color-gray-700);
      }
    }
  }
  .dark\:focus\:border-transparent {
    &:is(.dark *) {
      &:focus {
        border-color: transparent;
      }
    }
  }
  .dark\:focus\:ring-0 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:ring-2 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:ring-blue-400 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-blue-400);
      }
    }
  }
  .dark\:focus\:ring-gray-500 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-500);
      }
    }
  }
  .dark\:focus\:ring-gray-600 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-600);
      }
    }
  }
  .dark\:focus\:ring-gray-700 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-color: var(--color-gray-700);
      }
    }
  }
  .dark\:focus\:ring-offset-gray-800 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-offset-color: var(--color-gray-800);
      }
    }
  }
  .dark\:focus\:ring-offset-gray-900 {
    &:is(.dark *) {
      &:focus {
        --tw-ring-offset-color: var(--color-gray-900);
      }
    }
  }
  .prose-a\:text-blue-800 {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-blue-800);
    }
  }
  .prose-a\:visited\:text-purple-800 {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:visited {
        color: var(--color-purple-800);
      }
    }
  }
  .dark\:prose-a\:text-blue-300 {
    &:is(.dark *) {
      & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        color: var(--color-blue-300);
      }
    }
  }
  .dark\:prose-a\:visited\:text-purple-300 {
    &:is(.dark *) {
      & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        &:visited {
          color: var(--color-purple-300);
        }
      }
    }
  }
  .prose-code\:rounded-md {
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-md);
    }
  }
  .prose-code\:bg-gray-100 {
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      background-color: var(--color-gray-100);
    }
  }
  .prose-code\:p-1 {
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding: calc(var(--spacing) * 1);
    }
  }
  .prose-code\:font-normal {
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .dark\:prose-code\:bg-gray-700\/40 {
    &:is(.dark *) {
      & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        background-color: color-mix(in oklab, var(--color-gray-700) 40%, transparent);
      }
    }
  }
  .prose-pre\:rounded-xl {
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-xl);
    }
  }
  .prose-pre\:bg-slate-800 {
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      background-color: var(--color-slate-800);
    }
  }
  .prose-pre\:shadow-lg {
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:prose-pre\:bg-slate-800\/70 {
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        background-color: color-mix(in oklab, var(--color-slate-800) 70%, transparent);
      }
    }
  }
  .dark\:prose-pre\:shadow-none {
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:prose-pre\:ring-1 {
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:prose-pre\:ring-slate-300\/10 {
    &:is(.dark *) {
      & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        --tw-ring-color: color-mix(in oklab, var(--color-slate-300) 10%, transparent);
      }
    }
  }
}
@layer base {
  body {
    font-family: Inter, "Helvetica Neue", Helvetica, Arial, sans-serif;
  }
}
@layer components {
  [data-lesson-toc-target="toc"] li {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
    border-color: var(--color-gray-300);
    &:is(.dark *) {
      border-color: var(--color-gray-400);
    }
  }
}
@layer utilities {
  code[class*="language-"], pre[class*="language-"] {
    color: #ccc;
    font-family: Consolas, Monaco, 'Ubuntu Mono', monospace;
    font-size: 1rem;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    line-height: 1.7;
    tab-size: 4;
    hyphens: none;
  }
  pre[class*="language-"] {
    padding: 1rem;
    overflow: auto;
  }
  code[class*="language-"] {
    padding-top: 3px;
  }
  :not(pre)>code[class*="language-"] {
    padding: .1rem;
    border-radius: .3rem;
    white-space: normal;
  }
  .token.block-comment, .token.cdata, .token.comment, .token.doctype, .token.prolog {
    color: #999;
  }
  .token.punctuation {
    color: #ccc;
  }
  .token.attr-name, .token.deleted, .token.namespace, .token.tag {
    color: #e2777a;
  }
  .token.function-name {
    color: #6196cc;
  }
  .token.boolean, .token.function, .token.number {
    color: #f08d49;
  }
  .token.class-name, .token.constant, .token.property, .token.symbol {
    color: #f8c555;
  }
  .token.atrule, .token.builtin, .token.important, .token.keyword, .token.selector {
    color: #cc99cd;
  }
  .token.attr-value, .token.char, .token.regex, .token.string, .token.variable {
    color: #7ec699;
  }
  .token.entity, .token.operator, .token.url {
    color: #67cdcc;
  }
  .token.bold, .token.important {
    font-weight: 700;
  }
  .token.italic {
    font-style: italic;
  }
  .token.entity {
    cursor: help;
  }
  .token.inserted {
    color: green;
  }
  .line-numbers-rows>span {
    display: block;
    counter-increment: linenumber;
    line-height: 1.7rem;
  }
}
@layer utilities {
  .pulse-once {
    animation: heartbeat 0.5s alternate;
  }
  @keyframes heartbeat {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
    }
  }
}
@layer utilities {
  #support-us iframe {
    max-width: 100%;
  }
  #support-us .opencollective-banner {
    margin: auto;
  }
}
@layer utilities {
  .dark .chart {
    filter: invert(1) hue-rotate(180deg);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}
@layer base {
  [type='text'],input:where(:not([type])),[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
    appearance: none;
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    border-radius: 0px;
    padding-top: 0.5rem;
    padding-right: 0.75rem;
    padding-bottom: 0.5rem;
    padding-left: 0.75rem;
    font-size: 1rem;
    line-height: 1.5rem;
    --tw-shadow: 0 0 #0000;
    &:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
      --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: oklch(54.6% 0.245 262.881);
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
      box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      border-color: oklch(54.6% 0.245 262.881);
    }
  }
  input::placeholder,textarea::placeholder {
    color: oklch(55.1% 0.027 264.364);
    opacity: 1;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-date-and-time-value {
    min-height: 1.5em;
  }
  ::-webkit-date-and-time-value {
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }
  select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
    print-color-adjust: exact;
  }
  [multiple],[size]:where(select:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    padding-right: 0.75rem;
    print-color-adjust: unset;
  }
  [type='checkbox'],[type='radio'] {
    appearance: none;
    padding: 0;
    print-color-adjust: exact;
    display: inline-block;
    vertical-align: middle;
    background-origin: border-box;
    user-select: none;
    flex-shrink: 0;
    height: 1rem;
    width: 1rem;
    color: oklch(54.6% 0.245 262.881);
    background-color: #fff;
    border-color: oklch(55.1% 0.027 264.364);
    border-width: 1px;
    --tw-shadow: 0 0 #0000;
  }
  [type='checkbox'] {
    border-radius: 0px;
  }
  [type='radio'] {
    border-radius: 100%;
  }
  [type='checkbox']:focus,[type='radio']:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: oklch(54.6% 0.245 262.881);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  [type='checkbox']:checked,[type='radio']:checked {
    border-color: transparent;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
  }
  [type='checkbox']:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='radio']:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
    border-color: transparent;
    background-color: currentColor;
  }
  [type='checkbox']:indeterminate {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    border-color: transparent;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
    @media (forced-colors: active) {
      appearance: auto;
    }
  }
  [type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
    border-color: transparent;
    background-color: currentColor;
  }
  [type='file'] {
    background: unset;
    border-color: inherit;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-size: unset;
    line-height: inherit;
  }
  [type='file']:focus {
    outline: 1px solid ButtonText;
    outline: 1px auto -webkit-focus-ring-color;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
